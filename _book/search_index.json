[["index.html", "Machine Readable Pokémon Get daze Preface", " Machine Readable Pokémon Get daze Preface heyyo "],["import-the-spreadsheets.html", "1 Import the spreadsheets 1.1 library 1.2 read data", " 1 Import the spreadsheets 1.1 library library(googlesheets4) library(tidyverse) library(magrittr) library(lubridate) library(readxl) library(ggbeeswarm) 1.2 read data For this scale of data, I’d rather use read_xlsx() instead of googlesheets4::read_sheet() 1.2.1 release dates, series name excel_path &lt;- &quot;./input/Pokemon TCG Spreadsheet V3.25.xlsx&quot; sheet_names &lt;- excel_sheets(excel_path) sheet_names2 &lt;- sheet_names[-1] # remove &quot;Overview&quot; sheet release_dates &lt;- map( sheet_names2, ~ read_xlsx( excel_path, sheet = .x, range = &quot;B1:B2&quot; ) ) |&gt; map(~ pull(.x)) |&gt; reduce(c) release_dates_df &lt;- tibble( series = sheet_names2, release_date = release_dates ) release_dates_df overview_series_range &lt;- c( &quot;D4:D12&quot;, &quot;G4:G11&quot;, &quot;J4:J26&quot;, &quot;M4:M22&quot;, &quot;D31:D43&quot;, &quot;G31:G50&quot;, &quot;J31:J47&quot;, &quot;M31:M46&quot; ) series_gen &lt;- map( .x = overview_series_range, ~ read_xlsx( excel_path, col_names = &quot;series&quot;, sheet = &quot;Overview&quot;, range = .x ) ) |&gt; map2( .y = 1:8, ~ mutate(.data = .x, series_gen = rep(.y, nrow(.x))) ) |&gt; bind_rows() release_dates_df2 &lt;- left_join(release_dates_df, series_gen, by = &quot;series&quot;) |&gt; arrange(release_date) |&gt; mutate( lead = lead(series_gen), series_gen = if_else(is.na(series_gen), lead, series_gen), lead = NULL) release_dates_df2 1.2.1.1 release date, main expansion or not, from bulbagarden Use Convert Wiki Tables to CSV. Set the Table Selector to .sortable and fetch tables provided by bulbagarden csv no. content name 1 Main expansions List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_1.csv 2 Special expansions List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_2.csv 3 Black Star Promos List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_3.csv 4 POP Series List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_4.csv 5 McDonald’s Collections List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_5.csv series_main_expansions_df &lt;- read_csv( file = &quot;./input/List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_1.csv&quot; ) |&gt; mutate(series_class = &quot;Main Expansion&quot;) ## Rows: 95 Columns: 11 ## ── Column specification ───────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (11): EN no., JP no., EN symbol, JP symbol, English name, Japanese name, EN cards, JP... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. colnames(series_main_expansions_df) ## [1] &quot;EN no.&quot; &quot;JP no.&quot; &quot;EN symbol&quot; &quot;JP symbol&quot; ## [5] &quot;English name&quot; &quot;Japanese name&quot; &quot;EN cards&quot; &quot;JP cards&quot; ## [9] &quot;EN release date&quot; &quot;JP release date&quot; &quot;Set abb.&quot; &quot;series_class&quot; series_special_expansions_df &lt;- read_csv( file = &quot;./input/List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_2.csv&quot; ) |&gt; mutate(series_class = &quot;Special Expansion&quot;) ## Rows: 21 Columns: 9 ## ── Column specification ───────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (9): EN symbol, JP symbol, English name, Japanese name, EN cards, JP cards, EN releas... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. series_black_star_promos_df &lt;- read_csv( file = &quot;./input/List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_3.csv&quot; ) |&gt; mutate(series_class = &quot;Black Star Promo&quot;) ## Rows: 8 Columns: 9 ## ── Column specification ───────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (8): JP symbol, English name, Japanese name, EN cards, JP cards, EN release date, JP ... ## lgl (1): EN symbol ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. series_pop_series_df &lt;- read_csv( file = &quot;./input/List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_4.csv&quot; ) |&gt; mutate(series_class = &quot;Pop Series&quot;) ## Rows: 11 Columns: 9 ## ── Column specification ───────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (9): EN symbol, JP symbol, English name, Japanese name, EN cards, JP cards, EN releas... ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. series_mcdonalds_df &lt;- read_csv( file = &quot;./input/List_of_Pok%C3%A9mon_Trading_Card_Game_expansions_5.csv&quot; ) |&gt; mutate(series_class = &quot;McDonalds Collection&quot;, `EN cards` = as.character(`EN cards`)) ## Rows: 11 Columns: 9 ## ── Column specification ───────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (7): JP symbol, English name, Japanese name, JP cards, EN release date, JP release da... ## dbl (1): EN cards ## lgl (1): EN symbol ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. series_mcdonalds_df series_classification_df &lt;- bind_rows( series_main_expansions_df, series_special_expansions_df, series_black_star_promos_df, series_pop_series_df, series_mcdonalds_df) series_classification_df 1.2.1.2 merge with release dates df Merge series_classification_df with release_dates_df2 series_classification_df |&gt; colnames() ## [1] &quot;EN no.&quot; &quot;JP no.&quot; &quot;EN symbol&quot; &quot;JP symbol&quot; ## [5] &quot;English name&quot; &quot;Japanese name&quot; &quot;EN cards&quot; &quot;JP cards&quot; ## [9] &quot;EN release date&quot; &quot;JP release date&quot; &quot;Set abb.&quot; &quot;series_class&quot; release_dates_df2 |&gt; colnames() ## [1] &quot;series&quot; &quot;release_date&quot; &quot;series_gen&quot; # str_view_all(&quot;October, 2003 - September, 2006 &quot;, &quot;.+(?=\\\\s-)&quot;) # str_view_all(&quot;September 7, 2018 &quot;, &quot;\\\\s\\\\*\\\\s|(?&lt;=[a-z]{3,10}\\\\s\\\\d{4})\\\\s&quot;) # # str_view_all( # &quot;January, 2003 - February, 2004 February, 2004 - July, 2006&quot;, # &quot;\\\\s\\\\*\\\\s|(?&lt;=[a-z]{3,13},?\\\\s\\\\d{4})\\\\s(?!-)&quot;) series_classification_df2 &lt;- series_classification_df |&gt; rename( series = `English name`, series_ja = `Japanese name`, series_abb = `Set abb.`, cards_total = `EN cards`, cards_total_ja = `JP cards`, release_date = `EN release date`, release_date_ja = `JP release date`, ) |&gt; select(-`EN symbol`, -`JP symbol`, -`EN no.`, -`JP no.`) |&gt; # separate https://tidyr.tidyverse.org/reference/separate.html separate( cards_total_ja, into = c(&quot;cards_total_ja_1&quot;, &quot;cards_total_ja_2&quot;), fill = &quot;right&quot; ) series_classification_df2 # separate release dates of Japanese versions that are released as separate series series_classification_df3 &lt;- series_classification_df2 |&gt; mutate( release_date_ja = str_replace( release_date_ja, &quot;\\\\s\\\\*\\\\s|(?&lt;=[a-z]{3,13},?\\\\s\\\\d{4})\\\\s(?!-)&quot;, &quot;SEPARATE&quot; )) |&gt; separate( release_date_ja, into = c(&quot;release_date_ja_1&quot;, &quot;release_date_ja_2&quot;), sep = &quot;\\\\s\\\\*\\\\s|SEPARATE&quot;, fill = &quot;right&quot; ) |&gt; mutate( across( everything(), ~ recode( ., &quot;—&quot; = NA_character_, &quot;Ongoing&quot; = NA_character_) ), release_date_ja_2 = str_replace(release_date_ja_2, &quot;\\\\s\\\\*&quot;, &quot;&quot;) ) series_classification_df3 # test # str_view_all( # &quot;From February 9, 2021&quot;, # &quot;January|February|March|April|May|June|July|August|September|October|November|December&quot;) # str_view_all( # &quot;April - August, 2006&quot;, # &quot;[:digit:]{4}&quot;) # str_view_all( # &quot;October 13th - November 26th, 2013&quot;, # &quot;[:digit:]{4}&quot;) # str_view_all( # &quot;September, 2008 - March, 2009&quot;, # &quot;[:digit:]{4}&quot;) # https://lubridate.tidyverse.org/reference/parse_date_time.html parse_date_time( x = &quot;2021 February 21&quot;, orders = &quot;ybd&quot; ) ## [1] &quot;2021-02-21 UTC&quot; # run series_classification_df4 &lt;- series_classification_df3 |&gt; mutate( release_date_month = str_extract( release_date, &quot;January|February|March|April|May|June|July|August|September|October|November|December&quot; ), release_date_day = str_extract( release_date, &quot;[:digit:]{1,3}(?=,)|[:digit:]{1,3}(?=[:lower:]{2})(?![:lower:]{2},)&quot; ) |&gt; replace_na(replace = &quot;1&quot;), release_date_year = str_extract( release_date, &quot;[:digit:]{4}&quot; ), release_date = str_c( release_date_year, release_date_month, release_date_day ) |&gt; parse_date_time(orders = &quot;ybd&quot;), release_date_month = str_extract( release_date_ja_1, &quot;January|February|March|April|May|June|July|August|September|October|November|December&quot; ), release_date_day = str_extract( release_date_ja_1, &quot;[:digit:]{1,3}(?=,)|[:digit:]{1,3}(?=[:lower:]{2})(?![:lower:]{2},)&quot; ) |&gt; replace_na(replace = &quot;1&quot;), release_date_year = str_extract( release_date_ja_1, &quot;[:digit:]{4}&quot; ), release_date_ja_1 = str_c( release_date_year, release_date_month, release_date_day ) |&gt; parse_date_time(orders = &quot;ybd&quot;), release_date_month = str_extract( release_date_ja_2, &quot;January|February|March|April|May|June|July|August|September|October|November|December&quot; ), release_date_day = str_extract( release_date_ja_2, &quot;[:digit:]{1,3}(?=,)|[:digit:]{1,3}(?=[:lower:]{2})(?![:lower:]{2},)&quot; ) |&gt; replace_na(replace = &quot;1&quot;), release_date_year = str_extract( release_date_ja_2, &quot;[:digit:]{4}&quot; ), release_date_ja_2 = str_c( release_date_year, release_date_month, release_date_day ) |&gt; parse_date_time(orders = &quot;ybd&quot;), ) series_classification_df4 series_classification_df5 &lt;- series_classification_df4 |&gt; select( series_class, series, series_abb, series_ja, cards_total, release_date, cards_total_ja_1, cards_total_ja_2, release_date_ja_1, release_date_ja_2, ) series_classification_df5 Multiple observations per rowを参考に、cards_total_jaとrelease_date_jaを一気にpivot_longerすることが…できるのでは・・・ series_classification_df6 &lt;- series_classification_df5 |&gt; # rowid_to_column(&quot;id&quot;) |&gt; pivot_longer( !series_class:release_date, # !series_class:release_date, names_to = c(&quot;.value&quot;, &quot;ja_variation&quot;), names_pattern = &quot;(.*)_(1|2)&quot;, # names_sep = &quot;_&quot;, values_drop_na = TRUE ) |&gt; select(-ja_variation) series_classification_df6 1.2.1.3 join 表記ゆれや数日程度のrelease_dateのずれがある。基本的にBulbapediaのものにあわせる sheet名もそれに伴って書き換えなければいけないが、仕方ない release_dates_df3 &lt;- release_dates_df2 |&gt; mutate( series = recode( series, `McDonalds Collection 2021` = &quot;McDonald&#39;s Collection 2021&quot;, `Champions Path` = &quot;Champion&#39;s Path&quot;, `Sword and Shield` = &quot;Sword &amp; Shield&quot;, `Sword and Shield Promos` = &quot;SWSH Black Star Promos&quot;, `Sun and Moon` = &quot;Sun &amp; Moon&quot;, `Sun and Moon Promos` = &quot;SM Black Star Promos&quot;, `Mcdonalds Collection 2015` = &quot;McDonald&#39;s Collection 2015&quot;, `Mcdonalds Collection 2014` = &quot;McDonald&#39;s Collection 2014&quot;, `McDonalds Collection 2012` = &quot;McDonald&#39;s Collection 2012&quot;, # not Mcd! `X and Y` = &quot;XY&quot;, `X and Y Promos` = &quot;XY Black Star Promos&quot;, `McDonalds Collection` = &quot;McDonald&#39;s Collection&quot;, `Black and White` = &quot;Black &amp; White&quot;, `HeartGold and SoulSilver` = &quot;HeartGold &amp; SoulSilver&quot; ), series = str_replace(series, &quot;Pop&quot;, &quot;POP&quot;) ) release_dates_df3 つぎに、Bulbapediaを母体に一緒にしつつもTrainer KitはBulbapediaのリストにはないためseries_classにTrainer Kitを新設しつつ、release_dateについてはBulbapediaを優先する。 series_release_df1 &lt;- full_join( series_classification_df6, release_dates_df3, by = c(&quot;series&quot;)) |&gt; distinct() |&gt; mutate( series_class = case_when( str_detect(series, &quot;Trainer\\\\sKit&quot;) ~ &quot;Trainer Kit&quot;, TRUE ~ series_class ) ) series_release_df1 df_series &lt;- series_release_df1 |&gt; # select(release_date.x, release_date.y) |&gt; mutate( # indicate if the series is in V3.25 spreadsheet or # only available on bulbagarden&#39;s list meta_is_bulba_only = is.na(release_date.y), meta_is_v325_only = series_class == &quot;Trainer Kit&quot;, release_date = case_when( is.na(release_date.x) &amp; !is.na(release_date.y) ~ release_date.y, !is.na(release_date.x) &amp; is.na(release_date.y) ~ release_date.x, release_date.x == release_date.y ~ release_date.x, release_date.x != release_date.y ~ release_date.x, # TRUE ~ NA_Date_ ), release_date.x = NULL, release_date.y = NULL, cards_total = cards_total |&gt; as.character() |&gt; as.integer(), cards_total_ja = cards_total |&gt; as.character() |&gt; as.integer(), series_class = case_when( series == &quot;Pokemon GO&quot; ~ &quot;Special Expansion&quot;, TRUE ~ series_class ) ) |&gt; select(series_class, series, release_date, cards_total, series_gen, series_abb, series_ja, release_date_ja, cards_total_ja, everything() ) df_series # 157 x 11 1.2.2 df_series: colnames explanation df_series |&gt; colnames() ## [1] &quot;series_class&quot; &quot;series&quot; &quot;release_date&quot; &quot;cards_total&quot; ## [5] &quot;series_gen&quot; &quot;series_abb&quot; &quot;series_ja&quot; &quot;release_date_ja&quot; ## [9] &quot;cards_total_ja&quot; &quot;meta_is_bulba_only&quot; &quot;meta_is_v325_only&quot; colname meaning str series_class Retrieved from Bulbagarden. Either \"Main Expansion\", \"Special Expansion\", \"Black Star Promo\", \"Pop Series\", \"McDonalds Collection\", or \"Trainer Kit\". chr series The name of the series. “Neo Genesis”, “Sun &amp; Moon” etc. The names are based on the ones listed in Bulbapedia, not the V3.25 spreadsheet. chr release_date The release date of the series. The dates are based on the ones listed in Bulbapedia, not the ones on the V3.25 spreadsheet, from which the Bulbapedia’s date slightly differ. Release dates with no specific dates are converted to the 1st day of the month, e.g., May 2003 -&gt; 2003-05-01. POSIXct cards_total the amount of total cards of the series, according to Bulbapedia. The official count is sometimes lower than this. This does not necessarily match the amount of total cards of the series that can be calculated from the card list. The card list is based on V3.25 spreadsheet and the data is not exhaustive. int series_gen generation of the series, from 1-8. This is based on V3.25 spreadsheet and may not match from Bulbapedia’s classification (e.g., Legendary Collection classified as series_gen 1 in spreadsheet, series_gen 2 in Bulbapedia). int series_abb from Bulbapedia. might be useful for plotting to avoid overcrowding. chr series_ja Name of the series in Japanese version according to Bulbapedia. chr release_date_ja POSIXct cards_total_ja int meta_is_bulba_only TRUE if the series is only from Bulbapedia. lgl meta_is_v325_only TRUE if the series is only from spreadsheet. “Trainer Kit”s. lgl "],["card-data.html", "2 card data 2.1 read raw 2.2 convert to df 2.3 fix typos in Type 2.4 card number, promo or not", " 2 card data 2.1 read raw using sheet_names2 vector (which does not necessarily match the series names provided by Bulbapedia), read the excels. raw_xlsx &lt;- map( sheet_names2, ~ read_xlsx( excel_path, sheet = .x, skip = 3, col_types = &quot;text&quot; ) ) 2.2 convert to df raw_xlsx is still a list. Convert it to df: pokemon_df_list &lt;- map2( .x = raw_xlsx, .y = sheet_names2, ~ mutate(.data = .x, series = rep(.y, nrow(.x))) ) |&gt; map( ~ mutate( .data = .x, `Set #` = `Set #` |&gt; as.character() # some are num, some are char ) ) # bind rows everything_df_raw &lt;- pokemon_df_list |&gt; bind_rows() |&gt; filter(!is.na(Type)) |&gt; # remove empty rows select(`Set #`, Name, Type, series) 2.2.1 Match series names to Bulbapedia everything_df_bulbanized &lt;- everything_df_raw |&gt; mutate( series = recode( series, `McDonalds Collection 2021` = &quot;McDonald&#39;s Collection 2021&quot;, `Champions Path` = &quot;Champion&#39;s Path&quot;, `Sword and Shield` = &quot;Sword &amp; Shield&quot;, `Sword and Shield Promos` = &quot;SWSH Black Star Promos&quot;, `Sun and Moon` = &quot;Sun &amp; Moon&quot;, `Sun and Moon Promos` = &quot;SM Black Star Promos&quot;, `Mcdonalds Collection 2015` = &quot;McDonald&#39;s Collection 2015&quot;, `Mcdonalds Collection 2014` = &quot;McDonald&#39;s Collection 2014&quot;, `McDonalds Collection 2012` = &quot;McDonald&#39;s Collection 2012&quot;, # not Mcd! `X and Y` = &quot;XY&quot;, `X and Y Promos` = &quot;XY Black Star Promos&quot;, `McDonalds Collection` = &quot;McDonald&#39;s Collection&quot;, `Black and White` = &quot;Black &amp; White&quot;, `HeartGold and SoulSilver` = &quot;HeartGold &amp; SoulSilver&quot; ), series = str_replace(series, &quot;Pop&quot;, &quot;POP&quot;) ) 2.2.2 Merge series df &amp; poke df Now that the series names are Bulbanized, merge these datasets to retrieve series_type and release_date and series_gen: df_series_en &lt;- df_series |&gt; select(!ends_with(&quot;_ja&quot;)) everything_df_merged &lt;- left_join( everything_df_bulbanized, df_series_en, by = c(&quot;series&quot;) ) everything_df_merged # 15029 x 11 2.3 fix typos in Type “Fightning”, “Coloress” etc. everything_df_merged |&gt; dim() # 15029 x 10 ## [1] 15029 11 # check typos pokemon_df_summarised &lt;- everything_df_merged |&gt; group_by(Type) |&gt; summarise(n = n()) |&gt; arrange(n |&gt; desc()) everything_df_raw$Type |&gt; unique() ## [1] &quot;Lightning&quot; &quot;Psychic&quot; &quot;Colorless&quot; &quot;Fire&quot; ## [5] &quot;Grass&quot; &quot;Trainer&quot; &quot;Water&quot; &quot;Metal&quot; ## [9] &quot;Fighting&quot; &quot;Stadium&quot; &quot;Energy&quot; &quot;FIGHting&quot; ## [13] &quot;Darkness&quot; &quot;Tool&quot; &quot;Fightning&quot; &quot;Supporter&quot; ## [17] &quot;TM&quot; &quot;Grass/Darkness&quot; &quot;Water/Darkness&quot; &quot;Lightning/Darkness&quot; ## [21] &quot;Fighting/Darkness&quot; &quot;Psychic/Darkness&quot; &quot;Fire/Darkness&quot; &quot;Psychic/Metal&quot; ## [25] &quot;Darkness/Metal&quot; &quot;Grass/Metal&quot; &quot;Lightning/Metal&quot; &quot;Fire/Metal&quot; ## [29] &quot;Fighting/Metal&quot; &quot;Water/Metal&quot; &quot;Lightnijg&quot; &quot;Fire/Lightning&quot; ## [33] &quot;Lightning/Water&quot; &quot;Water/Fire&quot; &quot;Water/Fighting&quot; &quot;Colorless/Psychic&quot; ## [37] &quot;Item&quot; &quot;Dragon&quot; &quot;Lighting&quot; &quot;Fairy&quot; ## [41] &quot;Fire/Water&quot; &quot;Normal&quot; &quot;Grass/Fire&quot; &quot;Lightning/Grass&quot; ## [45] &quot;Metal/Fighting&quot; &quot;Fairy/Water&quot; &quot;Fairy/Psychic&quot; &quot;Electric&quot; ## [49] &quot;Colorelss&quot; &quot;Coloress&quot; everything_df_typo &lt;- everything_df_merged |&gt; mutate( Type = recode(Type, Fightning = &quot;Fighting&quot;, FIGHting = &quot;Fighting&quot;, Coloress = &quot;Colorless&quot;, Colorelss = &quot;Colorless&quot;, Normal = &quot;Colorless&quot;, Electric = &quot;Lightning&quot;, Lightnijg = &quot;Lightning&quot;, Lighting = &quot;Lightning&quot; ), Name = str_replace( Name, &quot;\\\\s+&quot;, &quot; &quot; ) |&gt; # Garados* δ EX Holon Phantoms 102/110 includes two spaces :( str_replace(&quot;Dartix&quot;, &quot;Dartrix&quot;) |&gt; str_replace(&quot;\\\\sForm\\\\s&quot;, &quot; Forme &quot;) |&gt; str_replace(&quot;Melmetal\\\\sV&quot;, &quot;MelmetalV&quot;) |&gt; str_replace(&quot;Exeggutor\\\\sV&quot;, &quot;ExeggutorV&quot;) |&gt; str_replace(&quot;Hatternee&quot;, &quot;Hatterene&quot;) |&gt; str_replace(&quot;Primal KyogreEK&quot;, &quot;Primal KyogreEX&quot;) |&gt; str_replace(&quot;StaraptorFCLV.X&quot;, &quot;StaraptorFBLV.X&quot;) |&gt; str_replace(&quot;Sirfetch’d&quot;, &quot;Sirfetch&#39;d&quot;) |&gt; str_replace(&quot;Castform\\\\sRain\\\\s&quot;, &quot;Castform Rainy\\\\s&quot;), # TODO: move this to df typo Type = if_else(Name == &quot;Morty&quot;, &quot;Supporter&quot;, Type), # one of the two Morty incorrectly classified as &quot;Psychic&quot; ) types_non_pokemon &lt;- c(&quot;Trainer&quot;, &quot;Energy&quot;, &quot;Supporter&quot;, &quot;Item&quot;, &quot;Stadium&quot;, &quot;Tool&quot;, &quot;TM&quot;) pokemon_type_ranking &lt;- everything_df_typo |&gt; filter(!Type %in% types_non_pokemon) |&gt; group_by(Type) |&gt; summarise(n = n()) |&gt; arrange(desc(n)) major_types &lt;- pokemon_type_ranking |&gt; filter(n &gt; 100) |&gt; # omit type+type pokemons select(Type) |&gt; pull() mixed_types &lt;- pokemon_type_ranking |&gt; filter(n &lt;= 100) |&gt; # select type+type pokemons select(Type) |&gt; pull() 2.3.1 color the types kawaii palettetown and pokepal not so much helpful here r base color sucks manually pick colour everything_df_coloured &lt;- everything_df_typo |&gt; mutate( colour = recode( Type, Water = &quot;#80DDFF&quot;, Grass = &quot;#80FF82&quot;, Psychic = &quot;#361C63&quot;, Colorless = &quot;#D1D1D1&quot;, Fighting = &quot;#8F441E&quot;, Fire = &quot;#FF0F23&quot;, Lightning = &quot;#F0C800&quot;, Darkness = &quot;#1D1D1B&quot;, # black Metal = &quot;#463F43&quot;, # silver Dragon = &quot;#ABAD00&quot;, # gold Fairy = &quot;#FF4DAF&quot;, # purple ), Type2 = case_when( Type %in% mixed_types ~ &quot;mixed&quot;, TRUE ~ Type), is_pokemon = !Type %in% types_non_pokemon | Name != &quot;Buried Fossil&quot; # tricky edge case: Buried Fossil is not a pokemon but Colorless item that can be used like a pokemon. ) colours colours_named_vector &lt;- c(&quot;Water&quot; = &quot;#80DDFF&quot;, &quot;Grass&quot;= &quot;#80FF82&quot;, &quot;Psychic&quot; = &quot;#361C63&quot;, &quot;Colorless&quot; = &quot;#D1D1D1&quot;, &quot;Fighting&quot; = &quot;#8F441E&quot;, &quot;Fire&quot; = &quot;#FF0F23&quot;, &quot;Lightning&quot; = &quot;#F0C800&quot;, &quot;Darkness&quot; = &quot;#1D1D1B&quot;, # black &quot;Metal&quot; = &quot;#463F43&quot;, # silver &quot;Dragon&quot; = &quot;#ABAD00&quot;, # gold &quot;Fairy&quot; = &quot;#FF4DAF&quot;, # purple &quot;mixed&quot; = &quot;black&quot; ) 2.3.2 repair set numbers that are converted to Dates test # check problems &quot;2022-04-22&quot; |&gt; ymd() %&gt;% # default pipe does not support {} in RHS {str_c(month(.), &quot;/&quot;, day(.))} ## [1] &quot;4/22&quot; # pop series 9 1/17 Garchomp &quot;44213.0&quot; |&gt; as.numeric() |&gt; as.Date(origin = &quot;1899/12/30&quot;) %&gt;% # excel date starts from 12/30 {str_c(month(.), &quot;/&quot;, day(.))} ## [1] &quot;1/17&quot; regex: Rdrr everything_df_date &lt;- everything_df_coloured |&gt; # filter(series %in% c(&quot;EX Trainer Kit 2&quot;, &quot;Pop Series 9&quot;)) |&gt; mutate( set = case_when( str_detect( `Set #`, pattern = &quot;\\\\d{4}-\\\\d{2}-\\\\d{2}&quot; ) ~ # use {} to use dot operator more than once, # and use %&gt;% instead of base |&gt; to do so. base pipe doesn&#39;t support it ymd(`Set #`) %&gt;% {str_c(month(.), &quot;/&quot;, day(.))}, # 11086 failed to parse str_detect( `Set #`, pattern = &quot;\\\\d{5}.0&quot; ) ~ as.character(`Set #`) |&gt; as.numeric() |&gt; as.Date(origin = &quot;1899/12/30&quot;) %&gt;% {str_c(month(.), &quot;/&quot;, day(.))}, # NAs introduced by coersion TRUE ~ `Set #` ) ) |&gt; select(set, everything(), -`Set #`) ## Warning: 11655 failed to parse. ## Warning in as.Date(as.numeric(as.character(`Set #`)), origin = &quot;1899/12/30&quot;): NAs introduced ## by coercion everything_df_date Ignore the warnings. Idk why it warns me that. 2.4 card number, promo or not regex stringr cheat sheet look arounds # https://stackoverflow.com/questions/6109882/regex-match-all-characters-between-two-strings # str_view_all(&quot;BH233/BH244&quot;, &quot;(?&lt;=[:alpha:]{0,8})\\\\d+(?=/)&quot;) # str_view_all(&quot;50a/147&quot;, &quot;(?&lt;=[:alpha:]{0,8})\\\\d+(?=[:lower:]{0,1}/)&quot;) everything_df_card_no &lt;- everything_df_date |&gt; mutate( card_number = case_when( str_detect(set, &quot;.?/.?&quot;) ~ str_extract( set, &quot;(?&lt;=[:alpha:]{0,3})\\\\d+(?=[:lower:]{0,1}/)&quot; ) |&gt; as.integer(), str_detect(set, &quot;\\\\d+&quot;) ~ str_extract(set, &quot;\\\\d+&quot;) |&gt; as.integer(), str_detect(set, &quot;\\\\d+$&quot;) ~ str_extract(set, &quot;\\\\d+$&quot;) |&gt; as.integer(), # str_detect(set, &quot;[A-Z]+\\\\d+&quot;) ~ # str_extract(set, &quot;\\\\d&quot;) TRUE ~ NA_integer_ ), cards_total_official = if_else( str_detect(set, &quot;.?/.?&quot;), str_extract( set, &quot;(?&lt;=/[:alpha:]{0,3})\\\\d+&quot; ) |&gt; as.integer(), NA_integer_ ), is_secret_card = (card_number &gt; cards_total_official) # !is.na(card_total) &amp;&amp; ) everything_df_card_no2 &lt;- everything_df_card_no |&gt; select( Name, series_gen, series, release_date, set, card_number, cards_total_official, starts_with(&quot;is_&quot;), everything() ) everything_df_card_no2 "],["name-the-final-df-df-and-export.html", "3 name the final df df, and export", " 3 name the final df df, and export df &lt;- everything_df_card_no2 wrangle the df further in pokemon-genes.Rmd next. "],["df_names.html", "4 df_names 4.1 pokemon sequencing 4.2 remove pokemon name from original name to extract subgenes", " 4 df_names Create a list of the most basic names of pokemons, e.g. “pikachu”, along with their pokedex # and generation. Kaggle’s data wasn’t good, Github’s data wasn’t either. You don’t have to run the next chunk: pokemon_names_df_raw &lt;- read_csv(&quot;./input/pokemon_github.csv&quot;) ## Rows: 1075 Columns: 13 ## ── Column specification ───────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (4): Name, Form, Type1, Type2 ## dbl (9): ID, Total, HP, Attack, Defense, Sp. Atk, Sp. Def, Speed, Generation ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. pokemon_names_df_raw_ja &lt;- read_csv(&quot;./input/ポケモンデータシート.csv&quot;) ## Rows: 987 Columns: 19 ## ── Column specification ───────────────────────────────────────────────────────────────────── ## Delimiter: &quot;,&quot; ## chr (15): 名前, フォルム, 名前(フォルム), 英語名, タイプ1, タイプ2, HP, 攻撃, 防御, 特攻, 特防, 素早さ, とくせい1, とくせい2, 夢特性... ## dbl (4): ぜんこくNo., ガラルNo., ヨロイ島No., カンムリNo. ## ## ℹ Use `spec()` to retrieve the full column specification for this data. ## ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. pokemon_names_df_raw_ja |&gt; colnames() ## [1] &quot;ぜんこくNo.&quot; &quot;ガラルNo.&quot; &quot;ヨロイ島No.&quot; &quot;カンムリNo.&quot; &quot;名前&quot; ## [6] &quot;フォルム&quot; &quot;名前(フォルム)&quot; &quot;英語名&quot; &quot;タイプ1&quot; &quot;タイプ2&quot; ## [11] &quot;HP&quot; &quot;攻撃&quot; &quot;防御&quot; &quot;特攻&quot; &quot;特防&quot; ## [16] &quot;素早さ&quot; &quot;とくせい1&quot; &quot;とくせい2&quot; &quot;夢特性&quot; pokemon_names_df1 &lt;- pokemon_names_df_raw |&gt; # filter(Form %in% c(&quot;Normal Forme&quot;, NA)) |&gt; select( ID, Name, Generation) |&gt; rename( id = ID, name = Name, pokemon_gen = Generation ) |&gt; distinct() |&gt; filter(!str_detect(name, &quot;50&quot;)) pokemon_names_df1 |&gt; dim() ## [1] 1012 3 pokemon_names_df_ja &lt;- pokemon_names_df_raw_ja |&gt; rename( id = `ぜんこくNo.`, name_ja = `名前`, name = `英語名` ) |&gt; select(id, name_ja, name) df_names &lt;- full_join(pokemon_names_df1, pokemon_names_df_ja, by = c(&quot;name&quot;, &quot;id&quot;)) |&gt; distinct() |&gt; mutate(id = id |&gt; as.character() |&gt; as.integer()) |&gt; select(id, name, name_ja, pokemon_gen) df_names |&gt; View() pokemon_names_df_ja |&gt; filter(id == &quot;469&quot;) View(pokemon_names_df1 ) bad bad bad. I resort to Bulbapedia once again to produce multiple csvs. The CSVs are stored under ./input/bulbapedia_name. files &lt;- list.files( path = &quot;./input/bulbapedia_name&quot;, pattern = &quot;*.csv&quot;, full.names = TRUE) names_df &lt;- map( files, ~ read_csv( file = .x, skip = 1, col_types = &quot;c&quot; ) ) |&gt; map2( .y = 1:9, ~ mutate(.data = .x, pokemon_gen = rep(.y, nrow(.x))) ) |&gt; bind_rows() |&gt; rename( id = Ndex, name = English, name_ja = Kana ) |&gt; select(id, name, name_ja, pokemon_gen) names_df2 &lt;- names_df |&gt; mutate( id = id |&gt; as.character() |&gt; as.integer(), ) df_names &lt;- names_df2 |&gt; filter(!is.na(id)) # remove gen 9 pokemons df_names |&gt; filter(str_detect(name, &quot;Nidoran&quot;)) df_names 4.1 pokemon sequencing df_gene &lt;- df |&gt; filter(is_pokemon) |&gt; mutate( nm = Name ) |&gt; mutate( is_gx = str_detect( nm, &quot;gx$|GX$&quot; ), nm = # remove GX from name str_replace( nm, &quot;GX$&quot;, &quot;&quot; ), nm = # remove &quot;L&quot; from legend team poke&#39;s and them only str_replace( nm, &quot;(?&lt;=\\\\&amp;\\\\s[:alpha:]{3,13})L$&quot;, &quot;&quot; ), is_team = str_detect( nm, &quot;\\\\s\\\\&amp;\\\\s&quot;), is_tag_team = is_team &amp; is_gx, # though not properly named, Entei &amp; Raikou is Legend # https://bulbapedia.bulbagarden.net/wiki/Entei_%26_Raikou_LEGEND_(Unleashed_90) is_legend = is_team &amp; !is_gx, ) |&gt; separate( col = nm, sep = &quot;\\\\s\\\\&amp;\\\\s&quot;, into = c(&quot;nm&quot;, &quot;team_buddy1&quot;, &quot;team_buddy2&quot;) ) |&gt; mutate( is_ex = str_detect(nm, &quot;\\\\sex$|EX$|\\\\sex&quot;), nm = str_replace(nm, &quot;\\\\sex$|EX$|\\\\sex&quot;, &quot;&quot;), has_master = str_detect(nm, &quot;^.+\\\\&#39;s\\\\s&quot;), master = str_extract(nm, &quot;^.+(?=\\\\&#39;s\\\\s)&quot;), nm = str_replace(nm, &quot;^.+\\\\&#39;s\\\\s&quot;, &quot;&quot;), is_dark = str_detect(nm, &quot;Dark\\\\s&quot;), nm = str_replace(nm, &quot;Dark\\\\s&quot;, &quot;&quot;), is_delta = str_detect(nm, &quot;\\\\sδ&quot;), nm = str_replace(nm, &quot;\\\\s{0,3}δ&quot;, &quot;&quot;), is_light = str_detect(nm, &quot;^Light\\\\s&quot;), nm = str_replace(nm, &quot;^Light\\\\s&quot;, &quot;&quot;), is_star = str_detect(nm, &quot;\\\\*$&quot;), nm = str_replace(nm, &quot;\\\\*$&quot;, &quot;&quot;), is_bros = str_detect(nm, &quot;\\\\sBros\\\\.$&quot;), nm = str_replace(nm, &quot;\\\\sBros\\\\.$&quot;, &quot;&quot;), is_levelten = str_detect(nm, &quot;\\\\s?LV\\\\.X&quot;), nm = str_replace(nm, &quot;\\\\s?LV\\\\.X&quot;, &quot;&quot;), is_ginga = str_detect(nm, &quot;\\\\s?G$&quot;), nm = str_replace(nm, &quot;\\\\s?G$&quot;, &quot;&quot;), is_gymleader = str_detect(nm, &quot;\\\\s?GL$&quot;), nm = str_replace(nm, &quot;\\\\s?GL$&quot;, &quot;&quot;), is_elitefour = str_detect(nm, &quot;\\\\s?4$&quot;), nm = str_replace(nm, &quot;\\\\s?4$&quot;, &quot;&quot;), is_champion = str_detect(nm, &quot;C$&quot;), nm = str_replace(nm, &quot;\\\\s?C$&quot;, &quot;&quot;), is_frontierbrain = str_detect(nm, &quot;\\\\s?FB$&quot;), nm = str_replace(nm, &quot;\\\\s?FB$&quot;, &quot;&quot;), is_break = str_detect(nm, &quot;\\\\s?BREAK&quot;), nm = str_replace(nm, &quot;\\\\s?BREAK&quot;, &quot;&quot;), is_primal = str_detect(nm, &quot;^Primal\\\\s&quot;), nm = str_replace(nm, &quot;^Primal\\\\s&quot;, &quot;&quot;), is_alolan = str_detect(nm, &quot;^Alolan\\\\s&quot;), nm = str_replace(nm, &quot;^Alolan\\\\s&quot;, &quot;&quot;), is_galarian = str_detect(nm, &quot;^Galarian\\\\s&quot;), nm = str_replace(nm, &quot;^Galarian\\\\s&quot;, &quot;&quot;), is_hisuian = str_detect(nm, &quot;^Hisuian\\\\s&quot;), nm = str_replace(nm, &quot;^Hisuian\\\\s&quot;, &quot;&quot;), is_v_family = str_detect(nm, &quot;V$|VMAX$|VUNION$|VSTAR$&quot;), is_v = str_detect(nm, &quot;(?&lt;=[:lower:])V$&quot;), nm = str_replace(nm, &quot;(?&lt;=[:lower:])V$&quot;, &quot;&quot;), # avoid &quot;Unown V&quot; is_vmax = str_detect(nm, &quot;VMAX$&quot;), nm = str_replace(nm, &quot;VMAX$&quot;, &quot;&quot;), is_vunion = str_detect(nm, &quot;VUNION$&quot;), nm = str_replace(nm, &quot;VUNION$&quot;, &quot;&quot;), is_vstar = str_detect(nm, &quot;VSTAR$&quot;), nm = str_replace(nm, &quot;VSTAR$&quot;, &quot;&quot;), is_prismstar = str_detect(nm, &quot;♦$&quot;), nm = str_replace(nm, &quot;♦$&quot;, &quot;&quot;), is_mega = str_detect(nm, &quot;^M(?=[:upper:])|^Mega\\\\s&quot;), nm = str_replace(nm, &quot;^M(?=[:upper:])|^Mega\\\\s&quot;, &quot;&quot;), is_originform = str_detect(nm, &quot;^Origin\\\\sForme\\\\s&quot;), nm = str_replace(nm, &quot;^Origin\\\\sForme\\\\s&quot;, &quot;&quot;), is_shining = str_detect(nm, &quot;^Shining\\\\s&quot;), nm = str_replace(nm, &quot;^Shining\\\\s&quot;, &quot;&quot;), is_specialdelivery = str_detect(nm, &quot;^Special\\\\sDelivery\\\\s&quot;), nm = str_remove(nm, &quot;^Special\\\\sDelivery\\\\s&quot;), # LEGEND, L and LEGEND is_legend = is_legend | str_detect(nm, &quot;LEGEND$&quot;), nm = str_replace(nm, &quot;LEGEND$&quot;, &quot;&quot;), # extract formes # kyurem_colour = # Unown includes ! and forme_variant = str_extract( nm, &quot;(?&lt;=Shellos).+|(?&lt;=Gastrodon).+|(?&lt;=Wormadam).+|(?&lt;=Burmy).+|(?&lt;=Unown).+|(?&lt;=Castform).+|.+(?=Castform)|(?&lt;=Ditto).+|(?&lt;=Deoxys).+|.+(?=Necrozma$)|.+(?=Porygon$)|.+(?=Greninja$)|.+(?=Mewtwo$)|.+(?=Urshifu$)|.+(?=Calyrex$)|.+(?=Kyurem)|.+(?=Rotom)|Detective\\\\s|Radiant\\\\s|\\\\sLibre|Sunny\\\\s|Surfing\\\\s|Flying\\\\s&quot;) |&gt; str_remove(&quot;^\\\\s|\\\\s$&quot;), # remove spaces before and after formes nm = str_remove( nm, &quot;(?&lt;=Shellos).+|(?&lt;=Gastrodon).+|(?&lt;=Wormadam).+|(?&lt;=Burmy).+|(?&lt;=Unown).+|(?&lt;=Castform).+|.+(?=Castform)|(?&lt;=Ditto).+|(?&lt;=Deoxys).+|.+(?=Necrozma$)|.+(?=Porygon$)|.+(?=Greninja$)|.+(?=Mewtwo$)|.+(?=Urshifu$)|.+(?=Calyrex$)|.+(?=Kyurem)|.+(?=Rotom)|Detective\\\\s|Radiant\\\\s|\\\\sLibre|Sunny\\\\s|Surfing\\\\s|Flying\\\\s&quot; ), ) |&gt; left_join(df_names, by = c(&quot;nm&quot; = &quot;name&quot;)) |&gt; rename(pokemon_name = nm) ## Warning: Expected 3 pieces. Missing pieces filled with `NA` in 15016 rows [1, 2, 3, 4, 5, 6, ## 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...]. 4.2 remove pokemon name from original name to extract subgenes subgene or subpokemon or parasites or decorations or whatever df_gene &lt;- df_gene |&gt; rowwise() |&gt; mutate(pokemon_deco = str_remove(Name, pattern = paste(pokemon_name))) |&gt; select(id, Name, pokemon_name, name_ja, pokemon_deco, pokemon_gen, Type2, team_buddy1, team_buddy2, set, series, release_date, everything(), starts_with(&quot;is_&quot;), starts_with(&quot;has_&quot;), starts_with(&quot;meta_&quot;)) df_gene |&gt; View() "],["plot-types.html", "5 plot types 5.1 シェア争い 5.2 proportion, frequency 5.3 secret cards 5.4 pokemon genes", " 5 plot types 5.0.1 geom_count df |&gt; # filter(Type %in% major_types) |&gt; ggplot( aes( x = release_date, y = Type2, colour = series_gen ) ) + # geom_quasirandom(groupOnX = FALSE, size = .3,) + geom_count(alpha = .3) + scale_size_area() + scale_colour_identity() + theme_minimal() + theme( legend.position = &quot;none&quot;, panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ggsave(&quot;./output/ReleaseDate-TypeCount.png&quot;, width = 1500, height = 1000, unit = &quot;px&quot;) 2020年代のTrainerはちょっとおかしい気が… Stadiumは一時期Stadiumというカテゴリだったが、今はTrainerのサブカテゴリ supporter item trainer 5.0.2 折れ線 df |&gt; filter(Type %in% major_types) |&gt; ggplot( aes( x = release_date, # y = Type, fill = Type # fill = colour ) ) + geom_area(stat = &quot;bin&quot;) + theme_minimal() + scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggsave(&quot;./output/ReleaseDate-TypeCountArea.png&quot;, width = 1500, height = 1000, unit = &quot;px&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. 5.0.3 series type ~ cards_total~ time df_series |&gt; # filter(Type %in% major_types) |&gt; ggplot( aes( x = release_date, y = series_class, size = cards_total, # colour = gen ) ) + # geom_quasirandom(groupOnX = FALSE, size = .3,) + geom_jitter(alpha = .3,width = 0, height = .1) + scale_size_area() + scale_colour_identity() + theme_minimal() + theme( legend.position = &quot;none&quot;, panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## Warning: Removed 18 rows containing missing values (geom_point). 5.1 シェア争い 5.2 proportion, frequency make geom_area proportional df |&gt; filter(Type %in% major_types) |&gt; ggplot( aes( x = release_date, # y = Type, fill = Type # fill = colour ) ) + geom_area(stat = &quot;bin&quot;, position = &quot;fill&quot;) + theme_minimal() + scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ggsave(&quot;./output/ReleaseDate-TypeCountAreaShare.png&quot;, width = 1500, height = 1000, unit = &quot;px&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. 5.2.1 highlight fairies df |&gt; filter(Type %in% major_types) |&gt; ggplot( aes( x = release_date, # y = Type, fill = Type == &quot;Fairy&quot; # fill = colour ) ) + geom_area(stat = &quot;bin&quot;, position = &quot;fill&quot;) + theme_minimal() + # scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ### highlight secret cards df |&gt; filter(Type %in% major_types) |&gt; ggplot( aes( x = release_date, # y = Type, fill = is_secret_card # fill = colour ) ) + geom_area(stat = &quot;bin&quot;, position = &quot;fill&quot;) + theme_minimal() + # scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. df |&gt; filter(Type %in% major_types, !is.na(is_secret_card)) |&gt; ggplot( aes( x = release_date, # y = Type, fill = is_secret_card # fill = colour ) ) + geom_area(stat = &quot;bin&quot;, position = &quot;fill&quot;) + theme_minimal() + # scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ### set size ~ time df_series |&gt; colnames() ## [1] &quot;series_class&quot; &quot;series&quot; &quot;release_date&quot; &quot;cards_total&quot; ## [5] &quot;series_gen&quot; &quot;series_abb&quot; &quot;series_ja&quot; &quot;release_date_ja&quot; ## [9] &quot;cards_total_ja&quot; &quot;meta_is_bulba_only&quot; &quot;meta_is_v325_only&quot; df_series |&gt; ggplot( aes( x = release_date, y = cards_total, colour = series_class ) ) + geom_smooth(size = .2, se = FALSE) + geom_text(aes(label = series_abb), size = 1.2) + theme_minimal() + # facet_wrap(facets = vars(series_class)) + # scale_fill_manual(values = colours_named_vector) + theme( # legend.position = &quot;none&quot;, panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39; ## Warning: Removed 18 rows containing non-finite values (stat_smooth). ## Warning: Removed 18 rows containing missing values (geom_text). ### series class frequency ~ time df_series |&gt; ggplot( aes( x = release_date, # y = Type, fill = series_class # fill = colour ) ) + geom_area(stat = &quot;bin&quot;) + theme_minimal() + # scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ## Warning: Removed 9 rows containing non-finite values (stat_bin). perhaps geom_density better? リリース頻度 df_series |&gt; ggplot( aes( x = release_date, y = ..density.., fill = series_class # fill = colour ) ) + geom_density( position = &quot;stack&quot;, adjust = .4 ) + theme_minimal() + # scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## Warning: Removed 9 rows containing non-finite values (stat_density). 実際の枚数 df_series |&gt; ggplot( aes( x = release_date, y = cards_total, fill = series_class # fill = colour ) ) + geom_density( # position = &quot;stack&quot;, adjust = .4 ) + theme_minimal() + # scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## Warning: Removed 18 rows containing non-finite values (stat_density). ## Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning -Inf ## Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning -Inf ## Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning -Inf ## Warning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning -Inf df |&gt; ggplot( aes( x = release_date, # y = Type, fill = Type == &quot;Water&quot; # fill = colour ) ) + geom_area(stat = &quot;bin&quot;, position = &quot;fill&quot;) + theme_minimal() + # scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. 5.3 secret cards df |&gt; ggplot( aes( x = release_date, # y = Type, fill = is_secret_card # fill = colour ) ) + geom_area(stat = &quot;bin&quot;, position = &quot;fill&quot;) + theme_minimal() + # scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. いろいろなものが復活しうる。継承がカード→カードではないため。 5.4 pokemon genes 5.4.1 pokemon gen share TODO: ビンをMonthにしたい… df_gene$release_date[1] |&gt; is.Date() ## [1] FALSE df_gene |&gt; # mutate(release_month = ym(release_date)) |&gt; View() ggplot( aes(x = release_date, group_by = pokemon_gen |&gt; as.factor(), fill = pokemon_gen) ) + geom_bar( colour = &quot;white&quot;, size = .2, stat = &quot;bin&quot;, # position = &quot;fill&quot;, bins = 100 ) + theme_minimal() + scale_fill_viridis_c() + # scale_fill_manual(values = colours_named_vector) + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) 新しいGenがリリースされると一気にそれが多くなるが、しばらくするとかなり偏りがなくなってくる（平衡状態みたいな）。第1世代はそれにしても多い気がするのでバイアスが検出できるかもしれない。 5.4.2 pokemon number # df_gene$id[1] |&gt; is.integer() df_gene |&gt; ggplot(aes(x = release_date, y = id, colour = pokemon_gen)) + geom_point(size = .1) + # geom_vline(xintercept = &quot;2011-03-11&quot; |&gt; as.POSIXct()) + scale_colour_viridis_c() + theme_minimal() + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## Warning: Removed 2305 rows containing missing values (geom_point). こうやって見ると3.11の直後はあまり余力がなく、ただ新世代はだしたいのでそこに注力したというのがありありと浮かんでくる。・・・と思ったのだが、それ以前からなんかやる気ないね？直後に以前の世代が少ないのもよくわからないし。用意は前からしていただろうから。しばらくして足りないのはわかる。 初出と最新をハイライトできたら面白いかもしれない。 # df_gene$id[1] |&gt; is.integer() df_gene_first_last &lt;- df_gene |&gt; select(release_date, id, pokemon_gen, pokemon_name) |&gt; group_by(id) |&gt; mutate(first_appeared = min(release_date), last_appeared = max(release_date)) |&gt; select(-release_date) |&gt; pivot_longer(cols = ends_with(&quot;_appeared&quot;), values_to = &quot;date&quot;) df_gene_first_last |&gt; View() df_gene |&gt; ggplot(aes(x = release_date, y = id)) + # geom_point(size = .1, alpha = .3, colour = &quot;grey30&quot;) + geom_point(data = df_gene_first_last |&gt; filter(name == &quot;first_appeared&quot;), aes(x = date), size = .3, colour = &quot;red&quot;) + geom_point(data = df_gene_first_last |&gt; filter(name == &quot;last_appeared&quot;), aes(x = date), size = .3, colour = &quot;blue&quot;) + geom_text(data = df_gene_first_last |&gt; filter(name == &quot;last_appeared&quot;), aes(x = date, label = pokemon_name), size = 3, colour = &quot;blue&quot;, hjust = 0) + # geom_vline(xintercept = &quot;2011-03-11&quot; |&gt; as.POSIXct()) + scale_colour_viridis_c() + theme_minimal() + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## Warning: Removed 2305 rows containing missing values (geom_point). ## Removed 2305 rows containing missing values (geom_point). ## Warning: Removed 2305 rows containing missing values (geom_text). ggsave(&quot;./output/id-date_first_last_appeared.png&quot;, width = 1500, height = 1000, unit = &quot;px&quot;, dpi =100) ## Warning: Removed 2305 rows containing missing values (geom_point). ## Warning: Removed 2305 rows containing missing values (geom_point). ## Warning: Removed 2305 rows containing missing values (geom_text). ピチューが2010年移行出てないだと？？pikachu使いたいからか？ df_gene |&gt; filter(pokemon_name == &quot;Pichu&quot;) # df_gene$id[1] |&gt; is.integer() df_gene |&gt; ggplot(aes(x = release_date, y = id, colour = Type2)) + geom_point(size = .1) + # scale_colour_viridis_c() + theme_minimal() + theme( panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## Warning: Removed 2305 rows containing missing values (geom_point). 5.4.2.1 poke deco # df_gene$id[1] |&gt; is.integer() df_gene |&gt; ggplot(aes(x = release_date, y = id, colour = pokemon_deco)) + geom_point(colour = &quot;grey30&quot;) + geom_text(aes(label = pokemon_deco), size = 2) + # scale_colour_viridis_c() + theme_minimal() + theme( legend.position = &quot;none&quot;, panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## Warning: Removed 2305 rows containing missing values (geom_point). ## Warning: Removed 2305 rows containing missing values (geom_text). df_gene |&gt; ggplot(aes(x = release_date, y = id, colour = pokemon_deco)) + geom_point(colour = &quot;grey30&quot;) + geom_text(aes(label = pokemon_deco), size = 2) + # scale_colour_viridis_c() + theme_minimal() + theme( legend.position = &quot;none&quot;, panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## Warning: Removed 2305 rows containing missing values (geom_point). ## Warning: Removed 2305 rows containing missing values (geom_text). 5.4.3 id ~ types ~ deco df_gene |&gt; ggplot(aes(x = id, fill = pokemon_gen |&gt; as.factor())) + geom_bar() + theme_minimal() + theme( legend.position = &quot;none&quot;, panel.grid = element_blank(), axis.line = element_line(size = .3), axis.ticks = element_line(size = .1) ) ## Warning: Removed 2305 rows containing non-finite values (stat_count). # coord_flip() これをランダムにドローしたときと比べてみたい。 単なる枚数だとかわいい（けど実戦では使われない）弱いたねポケモンが多くなる気がする。それにさらにGXとかが加わって手を変え品を変え再利用する。 リリース直後に多くなるのはミュージシャンのセトリとかでもそうだし、ファーストアルバムが結局みんなに好かれがち（Oasisの「けっきょくRadioheadにはみんなCreepしか期待していない」）というのも似ている。 リリース直後ご祝儀をモデルに組み込んでみるか。 すべてリリースごとにわけて、どれくらいで落ち着くか（平衡状態になるか）を見られそう。 df_gene |&gt; select(-is_pokemon, -meta_is_v325_only, -meta_is_bulba_only) |&gt; summarise(across(where(is.logical), ~ sum(.))) |&gt; summarise(across(everything(), ~ sum(.))) |&gt; pivot_longer(cols = everything()) |&gt; mutate(name = fct_reorder(name, desc(value))) |&gt; ggplot(aes(x = name, y = value)) + geom_point() + coord_flip() ## Warning: Removed 1 rows containing missing values (geom_point). "],["individual-poke.html", "6 individual poke 6.1 まずはなにもせずカウント 6.2 plot ECDF", " 6 individual poke 6.1 まずはなにもせずカウント df_poke_count_raw &lt;- df |&gt; group_by(Name) |&gt; summarise(n = n()) |&gt; arrange(desc(n)) 6.1.1 ECDF 負うた子に教えられて浅瀬を渡る df_count_full_name &lt;- df_gene |&gt; group_by(Name) |&gt; summarise(n = n()) |&gt; arrange(desc(n)) |&gt; mutate(ecdf = 1 - ecdf(n)(n - .01)) |&gt; select(-Name) |&gt; distinct() df_count_pokemon &lt;- df_gene |&gt; group_by(pokemon_name) |&gt; summarise(n = n()) |&gt; arrange(desc(n)) |&gt; mutate(ecdf = 1 - ecdf(n)(n - .01)) |&gt; select(-pokemon_name) |&gt; distinct() ecdf()はX &gt; nである割合であってX &gt;= nである割合ではないのだな やりたいこと的には、n = 1のときに、1以上のコピーがあるポケカの割合は1になってないとおかしい。n = 1のときに1よりもたくさんのコピーがある割合1 - .32とかを計算してしまっている。同様にn = 58のとき（ピカチュウさん）、X &gt;= 58である割合は 1 / 2425 (2425はユニークなポケモン名の数、df$Name |&gt; unique() |&gt; length())かと思うが、0になってしまっている、つまりX &gt; 58である割合を計算している。 6.2 plot ECDF 6.2.1 full name df_count_full_name |&gt; ggplot( aes( x = n, y = ecdf ) ) + geom_point() + scale_x_continuous( trans = &quot;log10&quot;, breaks = 10^(0:10) ) + scale_y_continuous( trans = &quot;log10&quot;, breaks = 10^(0:-10)) + theme_minimal() + theme( panel.grid = element_blank(), panel.background = element_rect(size = .3), axis.ticks = element_line(size = .1), aspect.ratio = 1 ) ### poke name df_count_pokemon |&gt; ggplot( aes( x = n, y = ecdf ) ) + geom_point() + scale_x_continuous( trans = &quot;log10&quot;, breaks = 10^(0:10) ) + scale_y_continuous( trans = &quot;log10&quot;, breaks = 10^(0:-10)) + theme_minimal() + theme( panel.grid = element_blank(), panel.background = element_rect(size = .3), axis.ticks = element_line(size = .1), aspect.ratio = 1 ) ## つぎに、1999-2005, 1999-2010, 1999-2015,みたいにして探る。ピカチュウが流行ったのって何年くらいだっけ？その影響はありそう。gganimateみたいなやつを使えればいいけど、ちょっとむずかしいかも。 df_poke_count &lt;- df |&gt; group_by(Name) |&gt; summarise(n = n()) |&gt; arrange(desc(n)) |&gt; mutate(ecdf = 1 - ecdf(n)(n)) |&gt; select(-Name) |&gt; distinct() |&gt; mutate(ecdf = ecdf |&gt; lead(default = 1)) df_poke_count |&gt; ggplot( aes( x = n, y = ecdf ) ) + geom_point() + scale_x_continuous( trans = &quot;log10&quot;, breaks = 10^(0:10) ) + scale_y_continuous( trans = &quot;log10&quot;, breaks = 10^(0:-10)) + theme_minimal() + theme( panel.grid = element_blank(), panel.background = element_rect(size = .3), axis.ticks = element_line(size = .1), aspect.ratio = 1 ) "],["random-draw.html", "7 random draw", " 7 random draw "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
