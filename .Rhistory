theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
df_gene |>
mutate(release_month = ym(release_date)) |> View()
df_gene$release_date[1]
df_gene$release_date[1] |> ym()
df_gene$release_date[1] |> is.Date()
df_gene$release_date[1] |> str()
as.yearmon()
df_gene |>
# mutate(release_month = ym(release_date)) |> View()
ggplot(
aes(x = release_date,
group_by = gen_poke |> as.factor(),
fill = gen_poke)
) +
geom_bar(
stat = "bin",
# position = "fill",
bins = 100
) +
theme_minimal() +
scale_
df_gene |>
# mutate(release_month = ym(release_date)) |> View()
ggplot(
aes(x = release_date,
group_by = gen_poke |> as.factor(),
fill = gen_poke)
) +
geom_bar(
stat = "bin",
# position = "fill",
bins = 100
) +
theme_minimal() +
# scale_fill_manual(values = colours_named_vector) +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
df_gene |>
# mutate(release_month = ym(release_date)) |> View()
ggplot(
aes(x = release_date,
group_by = gen_poke |> as.factor(),
fill = gen_poke)
) +
geom_bar(
colour = "white",
size = .2,
stat = "bin",
# position = "fill",
bins = 100
) +
theme_minimal() +
# scale_fill_manual(values = colours_named_vector) +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
df_gene |>
# mutate(release_month = ym(release_date)) |> View()
ggplot(
aes(x = release_date,
group_by = gen_poke |> as.factor(),
fill = gen_poke)
) +
geom_bar(
colour = "white",
size = .2,
stat = "bin",
# position = "fill",
bins = 100
) +
theme_minimal() +
scale_fill_viridis_c() +
# scale_fill_manual(values = colours_named_vector) +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
df_gene$id[1]
df_gene$id[1] |> is.integer()
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = id, y = release_date)) +
geom_point()
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id)) +
geom_point()
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = gen_poke)) +
geom_point()
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = gen_poke)) +
geom_point() +
scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = gen_poke)) +
geom_point(size = .1) +
scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = Type2)) +
geom_point(size = .1) +
# scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
df_gene |>
rowwise() |>
mutate(poke_deco = str_remove(Name, pattern = paste(pokemon_name)))
df_gene |>
rowwise() |>
mutate(poke_deco = str_remove(Name, pattern = paste(pokemon_name))) |>
select(Name, pokemon_name, poke_deco)
# strip_1_test_df <- strip_1_df |>
#
# leftover <- strip_1_test_df |>
#   filter( is.na(id)) |>
#   arrange(Name)
# View(leftover)
# View(strip_1_test_df)
# leftover[1,1]
df_gene <- df_gene |>
rowwise() |>
mutate(poke_deco = str_remove(Name, pattern = paste(pokemon_name))) |>
select(id, Name, pokemon_name, name_ja, poke_deco, gen_poke, Type2, team_buddy1, team_buddy2, set, series, release_date, everything(), starts_with("is_"), starts_with("has_"), starts_with("meta_"))
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = Type2)) +
geom_text(aes(label = poke_deco), size = 2) +
# scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = poke_deco)) +
geom_text(aes(label = poke_deco), size = 2) +
# scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = poke_deco)) +
geom_text(aes(label = poke_deco), size = 2) +
# scale_colour_viridis_c() +
theme_minimal() +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = poke_deco)) +
geom_text(aes(label = poke_deco), size = 1) +
# scale_colour_viridis_c() +
theme_minimal() +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = poke_deco)) +
geom_text(aes(label = poke_deco), size = 2) +
# scale_colour_viridis_c() +
theme_minimal() +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = poke_deco)) +
geom_point(colour = "grey30") +
geom_text(aes(label = poke_deco), size = 2) +
# scale_colour_viridis_c() +
theme_minimal() +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
df_gene |> colnames()
df |> colnames()
df |>
ggplot(
aes(
x = release_date,
# y = Type,
fill = is_secret_card
# fill = colour
)
) +
geom_area(stat = "bin", position = "fill") +
theme_minimal() +
# scale_fill_manual(values = colours_named_vector) +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
df_gene |>
ggplot(aes(x = id)) +
geom_histogram()
df_gene |>
ggplot(aes(x = id)) +
geom_bar()
df_gene |>
ggplot(aes(x = pokemon_name)) +
geom_bar() +
```{r fig.height=8, fig.width=5}
df_gene |>
ggplot(aes(x = paste(id,"_", pokemon_name))) +
geom_bar() +
coord_flip()
df_gene |>
ggplot(aes(x = id, colour = gen_poke)) +
geom_bar() +
coord_flip()
df_gene |>
ggplot(aes(x = id, colour = gen_poke)) +
geom_bar()
df_gene |>
ggplot(aes(x = id, colour = gen_poke)) +
geom_bar() +
theme_minimal() +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
df_gene |>
ggplot(aes(x = id, fill = gen_poke)) +
geom_bar() +
theme_minimal() +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
df_gene |>
ggplot(aes(x = id, fill = gen_poke |> as.factor())) +
geom_bar() +
theme_minimal() +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = gen_poke)) +
geom_point(size = .1) +
geom_vline(xintercept = "2011-03-11" |> as.POSIXct())
# df_gene$id[1] |> is.integer()
df_gene |>
ggplot(aes(x = release_date, y = id, colour = gen_poke)) +
geom_point(size = .1) +
geom_vline(xintercept = "2011-03-11" |> as.POSIXct()) +
scale_colour_viridis_c() +
theme_minimal() +
theme(
panel.grid = element_blank(),
axis.line = element_line(size = .3),
axis.ticks = element_line(size = .1)
)
series_mcdonalds_df
series_classification_df
release_dates_df2
series_classification_df4
series_classification_df3
series_classification_df2
series_classification_df5
series_classification_df6 <-
series_classification_df5 |>
# rowid_to_column("id") |>
pivot_longer(
!series_class:release_date,
# !series_class:release_date,
names_to = c(".value", "ja_variation"),
names_pattern = "(.*)_(1|2)",
# names_sep = "_",
values_drop_na = TRUE
) |>
select(-ja_variation)
series_classification_df6
release_dates_df3
series_release_df1
df_series
df_series |> colnames()
df_series
df_series <- series_release_df1 |>
# select(release_date.x, release_date.y) |>
mutate(
# indicate if the series is in V2.35 spreadsheet or
# only available on bulbagarden's list
meta_is_bulba_only = is.na(release_date.y),
meta_is_v235_only = is.na(release_date.x),
release_date =
case_when(
is.na(release_date.x) & !is.na(release_date.y) ~ release_date.y,
!is.na(release_date.x) & is.na(release_date.y) ~ release_date.x,
release_date.x == release_date.y ~ release_date.x,
release_date.x != release_date.y ~ release_date.x,
# TRUE ~ NA_Date_
),
release_date.x = NULL,
release_date.y = NULL,
cards_total = cards_total |> as.character() |> as.integer(),
cards_total_ja = cards_total |> as.character() |> as.integer(),
series_class = case_when(
series == "Pokemon GO" ~ "Special Expansion",
TRUE ~ series_class
)
) |>
select(series_class, series, release_date, cards_total, gen, series_abb,  series_ja, release_date_ja, cards_total_ja, everything() )
df_series
df_series |> colnames()
df_series$series_class |> unique()
df_series <- series_release_df1 |>
# select(release_date.x, release_date.y) |>
mutate(
# indicate if the series is in V2.35 spreadsheet or
# only available on bulbagarden's list
meta_is_bulba_only = is.na(release_date.y),
meta_is_v325_only = is.na(release_date.x),
release_date =
case_when(
is.na(release_date.x) & !is.na(release_date.y) ~ release_date.y,
!is.na(release_date.x) & is.na(release_date.y) ~ release_date.x,
release_date.x == release_date.y ~ release_date.x,
release_date.x != release_date.y ~ release_date.x,
# TRUE ~ NA_Date_
),
release_date.x = NULL,
release_date.y = NULL,
cards_total = cards_total |> as.character() |> as.integer(),
cards_total_ja = cards_total |> as.character() |> as.integer(),
series_class = case_when(
series == "Pokemon GO" ~ "Special Expansion",
TRUE ~ series_class
)
) |>
select(series_class, series, release_date, cards_total, gen, series_abb,  series_ja, release_date_ja, cards_total_ja, everything() )
df_series |> colnames()
df_series$series_class |> unique()
View(everything_df_merged)
everything_df_merged
everything_df_merged <-
left_join(
everything_df_bulbanized,
df_series |> select(!ends_with("_ja")),
by = c("series", "gen")
) |>
mutate(release_date = release_date.y,
release_date.y = NULL,
release_date.x = NULL) # overwrite by Bulbapedia dates
# check how many NAs exist
everything_df_merged |>
summarise(across(everything(), ~ sum(is.na(.))))
everything_df_merged # 15029 x 11
everything_df_merged <-
left_join(
everything_df_bulbanized,
df_series |> select(!ends_with("_ja")),
by = c("series", "gen")
) |>
mutate(release_date = release_date.y,
release_date.y = NULL,
release_date.x = NULL) # overwrite by Bulbapedia dates
everything_df_bulbanized <-
everything_df_raw |>
mutate(
series = recode(
series,
`McDonalds Collection 2021` = "McDonald's Collection 2021",
`Champions Path` = "Champion's Path",
`Sword and Shield` = "Sword & Shield",
`Sword and Shield Promos` = "SWSH Black Star Promos",
`Sun and Moon` = "Sun & Moon",
`Sun and Moon Promos` = "SM Black Star Promos",
`Mcdonalds Collection 2015` = "McDonald's Collection 2015",
`Mcdonalds Collection 2014` = "McDonald's Collection 2014",
`McDonalds Collection 2012` = "McDonald's Collection 2012", # not Mcd!
`X and Y` = "XY",
`X and Y Promos` = "XY Black Star Promos",
`McDonalds Collection` = "McDonald's Collection",
`Black and White` = "Black & White",
`HeartGold and SoulSilver` = "HeartGold & SoulSilver"
),
series = str_replace(series, "Pop", "POP")
)
everything_df_merged <-
left_join(
everything_df_bulbanized,
df_series |> select(!ends_with("_ja")),
by = c("series", "gen")
) |>
mutate(release_date = release_date.y,
release_date.y = NULL,
release_date.x = NULL) # overwrite by Bulbapedia dates
# check how many NAs exist
everything_df_merged |>
summarise(across(everything(), ~ sum(is.na(.))))
everything_df_merged # 15029 x 11
library(googlesheets4)
library(tidyverse)
library(magrittr)
library(lubridate)
library(readxl)
library(ggbeeswarm)
ss_input <- "https://docs.google.com/spreadsheets/d/1IkplPAxSxqEW8qIKH_KW3cDp7C261kNZ-AX-AmCxnMY/edit#gid=840081758"
ss_output <- "https://docs.google.com/spreadsheets/d/1VcVuCtDyKI5oqGsWJPKJGO7y-vIVZge6JrRqrE_kAQY/edit#gid=0"
excel_path <- "./input/Pokemon TCG Spreadsheet V3.25.xlsx"
sheet_names <- excel_sheets(excel_path)
sheet_names2 <- sheet_names[-1] # remove "Overview" sheet
release_dates <-
map(
sheet_names2,
~ read_xlsx(
excel_path,
sheet = .x,
range = "B1:B2"
)
) |>
map(~ pull(.x)) |>
reduce(c)
release_dates_df <-
tibble(
series = sheet_names2,
release_date = release_dates
)
release_dates_df
overview_series_range <- c(
"D4:D12",
"G4:G11",
"J4:J26",
"M4:M22",
"D31:D43",
"G31:G50",
"J31:J47",
"M31:M46"
)
series_gen <-
map(
.x = overview_series_range,
~ read_xlsx(
excel_path,
col_names = "series",
sheet = "Overview",
range = .x
)
) |>
map2(
.y = 1:8,
~ mutate(.data = .x, gen = rep(.y, nrow(.x)))
) |>
bind_rows()
release_dates_df2 <-
left_join(release_dates_df, series_gen, by = "series") |>
arrange(release_date) |>
mutate(
lead = lead(gen),
gen = if_else(is.na(gen), lead, gen),
lead = NULL)
release_dates_df2
